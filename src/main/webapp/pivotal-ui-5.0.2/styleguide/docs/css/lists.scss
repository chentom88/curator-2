/*doc
---
title: Lists
name: list
categories:
 - css_base_lists
 - css_all
---

<code class="pam">
<i class="fa fa-download" alt="Install the Component">
npm install pui-css-lists --save
</i>
</code>


This section contains different list styles.
*/

/*doc
---
title: Inline
name: list_inline
parent: list
---

An inline list is one of the three methods for laying out content (including grids and the media block).

```html_example
<ul class="list-inline">
  <li>
    feep
  </li>
  <li>
    fop
  </li>
  <li>
    meep
  </li>
</ul>
```

You can use inline lists to lay out elements. Here's an example of a header next to a button:

```html_example
<ul class="list-inline lhxl">
  <li class="txt-m">
    <h5 class="em-alt em-max">Bound Services</h5>
  </li>
  <li class="txt-m">
    <a class="btn btn-default" target="_blank">Add from Marketplace</a>
  </li>
</ul>
```

*/


/*doc
---
title: Ordered
name: list_ordered
parent: list
---


```html_example
<ol>
  <li>
    feep
  </li>
  <li>
    fop
  </li>
  <li>
    meep
  </li>
</ol>
```

*/

/*doc
---
title: Unordered
name: list_unordered
parent: list
---

```html_example
<ul class="list-unordered">
  <li>
    feep
  </li>
  <li>
    fop
  </li>
  <li>
    meep
  </li>
</ul>
```

*/


/*doc
---
title: Unstyled
name: list_unstyled
parent: list
---

Places all list items on a single line with `display: inline-block;` and some light padding. The `.list-unstyled` class can be applied to either a `<ul>` or and `<ol>`.

```html_example
<ul class="list-unstyled">
  <li>
    feep
  </li>
  <li>
    fop
  </li>
  <li>
    meep
  </li>
</ul>
```

*/

/*doc
---
title: Inline Divider
name: list_inline_divider
parent: list
---

Places all list items on a single line with `display: inline-block;` and some light padding. The `.list-inline-divider`
also adds a simple gray border.

```html_example
<ul class="list-inline-divider">
  <li><a class="type-em-1" href="http://google.com">Edit</a></li>
  <li><a class="type-em-1" href="http://google.com">Invite</a></li>
</ul>
```

Here's an example on a dark background (add `.list-inline-divider-light` to make the border white):

```html_inverse_example
<ul class="list-inline-divider list-inline-divider-light">
  <li><a class="type-em-1" href="http://google.com">Edit</a></li>
  <li><a class="type-em-1" href="http://google.com">Invite</a></li>
</ul>
```

*/


/*doc
---
title: Breadcrumb
name: list_breadcrumb
parent: list
---

The `.list-breadcrumb` can be used to provide additional page navigation.

Breadcrumbs use their own monospace font-family.

```html_example
<ul class="list-breadcrumb">
  <li>
    <a href="http://google.com">Parent</a>
  </li>
  <li>
    <a href="http://google.com">Child</a>
  </li>
  <li class="current">
    <span>Current Page</span>
  </li>
</ul>
```
*/

/*doc
---
title: Group
name: list_group
parent: list
---

Use this list when you need simple gray borders between items

```html_example
<ul class="list-group">
  <li class="list-group-item">
    item 1
  </li>
  <li class="list-group-item">
    item 2
  </li>
  <li class="list-group-item">
    item 3
  </li>
</ul>
```

The "event list" from AppsManager can be built with a group list:

```html_example
<ul class="list-group">
  <li class="list-group-item pln">
    <div class="media">
      <div class="media-left media-middle phxxl">
        <i class="fa-exclamation-circle type-error-4 fa h2 man"></i>
      </div>
      <div class="media-body pbn">
        <div class="type-neutral-2 mbs">
          app crashed
        </div>
        <div class="type-neutral-4 small">
          <span>user@example.com</span>
          <span>11/14/2014 at 4:00 PM UTC</span>
        </div>
      </div>
    </div>
  </li>

  <li class="list-group-item pln">
    <div class="media">
      <div class="media-left media-middle phxxl">
        <i class="fa-stop type-neutral-5 fa h2 man"></i>
      </div>
      <div class="media-body pbn">
        <div class="type-neutral-2 mbs">
          stopped app
        </div>
        <div class="type-neutral-4 small">
          <span>user@example.com</span>
          <span>11/14/2014 at 3:00 PM UTC</span>
        </div>
      </div>
    </div>
  </li>

  <li class="list-group-item pln">
    <div class="media">
      <div class="media-left media-middle phxxl">
        <i class="fa-play type-brand-8 fa h2 man"></i>
      </div>
      <div class="media-body pbn">
        <div class="type-neutral-2 mbs">
          started app
        </div>
        <div class="type-neutral-4 small">
          <span>user@example.com</span>
          <span>11/14/2014 at 2:00 PM UTC</span>
        </div>
      </div>
    </div>
  </li>
</ul>
```
*/

/*doc
---
title: Group Inverse
name: list_group_inverse
parent: list
---
Use this list when you need simple gray borders between items on a dark background. It is very subtle.

```html_example
<ul class="list-group-inverse">
  <li class="list-group-item">
    item 1
  </li>
  <li class="list-group-item">
    item 2
  </li>
  <li class="list-group-item">
    item 3
  </li>
</ul>
```
*/


/*doc
---
title: Vertical Divider
name: list_vertical_divider
parent: list
---

Use this list when you need larger gray borders between
items. It should be used in concert with grid column
sizes when you want the items to take a particular width.

We achieve equal height columns using the padding/margin hack,
so we need an additional `.height-enforcer` element to get the
right min-height.

```html_example
<ul class="list-vertical-divider">
  <li class="col-md-8">
    <div class="height-enforcer">
      item 1
    </div>
  </li>
  <li class="col-md-8">
    <div class="height-enforcer">
      item 2
    </div>
  </li>
  <li class="col-md-8">
    <div class="height-enforcer" style="height: 200px">
      item 3, which is taller
    </div>
  </li>
</ul>
```

```html_example
<ul class="list-vertical-divider-2">
  <li class="col-md-8">
    <div class="height-enforcer">
      item 1
    </div>
  </li>
  <li class="col-md-8">
    <div class="height-enforcer">
      item 2
    </div>
  </li>
  <li class="col-md-8">
    <div class="height-enforcer" style="height: 200px">
      item 3, which is taller
    </div>
  </li>
</ul>
```

*/

/*doc
---
title: Steps
name: list_steps
parent: list
---

Use this list when you need to show the steps in a flow.

```html_example
<ol class="list-steps">
  <li>
    Sign up Account
  </li>
  <li class="current">
    Create Organization
  </li>
  <li>
    Do other things
  </li>
  <li>
    And more things
  </li>
</ol>
```

*/

/*doc
---
title: Checked
name: list_checked
parent: list
---

Replaces the default bullet image with the font awesome checkmark.

```html_example
<ul class="list-checked">
  <li>
    feep
  </li>
  <li>
    fop
  </li>
  <li>
    meep
  </li>
</ul>
```

*/

/*doc
---
title: Cards
name: list_cards
parent: list
---

As the browser width changes, list-cards fill in one after another. There are two card types, `type-card-1` and
`type-card-2`. For this example, we've set both of them to stack on mobile sized screens.

```html_example_table
<ul class="list-cards list-card-1 list-cards-xs">
  <li class="bg-neutral-7">
    <p>list-card-1</p>
  </li>
</ul>

<ul class="list-cards list-card-2 list-cards-xs">
  <li class="bg-neutral-7">
    <p>list-card-2</p>
  </li>
</ul>
```

You can specify the breakpoint in which the cards stack by using the `list-card-*` classes. If the breakpoint is not
specified, the cards fill 100% of the `list-cards` width.


List Card Breakpoints | Class Names
--------------------- | ---------------
extra-small           | `.list-card-xs`
small                 | `.list-card-sm`
medium                | `.list-card-md`
large                 | `.list-card-lg`
extra-large           | `.list-card-xl`

<div class="alert alert-info mbxl">
  <p class="em-high">The cards list should only be used in fully liquid layouts, otherwise grids are a better choice.</p>
</div>

This is an example of a card list with the `list-cards-xs` stack point applied.
Resize the browser to see how cards stack on desktop sizes and expand on mobile sizes.

```html_example
<ul class="list-cards list-card-2 list-cards-xs">
  <li class="bg-neutral-7">
    <p>lorem ipsum 1</p>
  </li>
  <li class="bg-neutral-7">
    <p>lorem ipsum 2</p>
  </li>
  <li class="bg-neutral-7">
    <p>lorem ipsum 3</p>
  </li>
  <li class="bg-neutral-7">
    <p>lorem ipsum 4</p>
  </li>
  <li class="bg-neutral-7">
    <p>lorem ipsum 5</p>
  </li>
  <li class="bg-neutral-7">
    <p>lorem ipsum 6</p>
  </li>
  <li class="bg-neutral-7">
    <p>lorem ipsum 7</p>
  </li>
  <li class="bg-neutral-7">
    <p>lorem ipsum 8</p>
  </li>
</ul>
```
If you would like custom card dimensions, in your sass include the makeCard mixin, like so: `@include makeCard(height, width, name);`
You can then access the class via `.list-card-#{name}`.

<h3 class="styleguide">Clickable List Cards</h3>

If you want your list cards to function as links (i.e. be clickable),
wrap all the inner content in `a` with class `list-card-link`.

```html_example
<ul class="list-cards list-card-1 list-cards-xs">
  <li class="bg-neutral-7">
    <a class="list-card-link" href="http://bit.ly/1sEyvH5">
      <p>This entire list card is clickable!</p>
    </a>
  </li>
  <li class="bg-neutral-7">
    <a class="list-card-link" href="http://bit.ly/1sFaArX">
      <p>This entire list card is clickable as well!</p>
    </a>
  </li>
</ul>
```
*/

/*doc
---
title: Layout Lists
name: layout_lists
categories:
 - css_utilities_layout-lists
 - css_all
---

Sometimes you might want to use lists to lay out elements on the page.

[Inline lists][list_inline] and [vertical divider lists][list_vertical_divider]
are particularly useful when you don't know the width of the element you want to layout,
or you want to vertically align it.

Use [Card lists][list_cards] if you'd like to make a grid of vertically and horizontally aligned cards.

*/


/*doc
---
title: Timeline
name: time_line
parent: list
---

A Timeline is a graphical representation of sequenced events. The Timeline list components are used to order list items by timestamp.

We achieve equal width columns for the time stamp by using a display table hack, so we need an additional inline style on the first `list-timeline-date` to specify the desired width.

```html_example
<ol class="list-timeline">
  <li class="list-timeline-item">
    <time datetime="2014-07-04" class="list-timeline-date" style="width: 150px;">1 day ago</time>
    <span class="list-timeline-title">
      java buildpack (offline) (2.5)
      <span class="list-timeline-subtitle">a minor release</span>
    </span>
  </li>
  <li class="list-timeline-item">
    <time datetime="2014-07-04" class="list-timeline-date">1 day ago</time>
    <span class="list-timeline-title">
      java buildpack (offline) (2.5)
      <span class="list-timeline-subtitle">a minor release</span>
    </span>
  </li>
  <li class="list-timeline-item">
    <time datetime="2014-07-04" class="list-timeline-date">1 day ago</time>
    <span class="list-timeline-title">
      java buildpack (offline) (2.5)
      <span class="list-timeline-subtitle">a minor release</span>
    </span>
  </li>
</ol>
```
*/
